:start
//Size
MOVE 0x00 r8
//Actual
MOVE 0x00 r9

//Call func readprogram
PUSH >funccall_00
JUMP >func_readprogram
:funccall_00

//Brainfuck cursor
MOVE r8 r10

//Call func execprogram
PUSH >funccall_01
JUMP >func_execprogram
:funccall_01

JUMP >end

//functions

//function readprogram
:func_readprogram
GET_CHAR r0
STORE r8 r0
ADD r8 0x01 r8
IF_NE r0 '\n' ELSE >func_readprogram_al
  JUMP >func_readprogram
:func_readprogram_al
POP r15
JUMP r15

//function execprogram
:func_execprogram
LOAD r9 r0
ADD r9 0x01 r9
IF_NE r9 r8 ELSE >func_execprogram_al

  IF_EQ r0 '>' ELSE >func_execprogram_inc_cursor
    ADD r10 0x01 r10
  :func_execprogram_inc_cursor

  IF_EQ r0 '<' ELSE >func_execprogram_dec_cursor
    SUB r10 0x01 r10
  :func_execprogram_dec_cursor

  IF_EQ r0 '+' ELSE >func_execprogram_inc_val
    LOAD r10 r1
    ADD r1 0x01 r1
    STORE r10 r1
  :func_execprogram_inc_val

  IF_EQ r0 '-' ELSE >func_execprogram_dec_val
    LOAD r10 r1
    SUB r1 0x01 r1
    STORE r10 r1
  :func_execprogram_dec_val

  IF_EQ r0 '.' ELSE >func_execprogram_write_val
    LOAD r10 r1
    PUT_CHAR r1
  :func_execprogram_write_val

  IF_EQ r0 ',' ELSE >func_execprogram_read_val
    GET_CHAR r1
    STORE r10 r1
  :func_execprogram_read_val

  IF_EQ r0 '[' ELSE >func_execprogram_start_loop
    PUSH r9
  :func_execprogram_start_loop

  IF_EQ r0 ']' ELSE >func_execprogram_end_loop
    LOAD r10 r1
    IF_NE r1 0x00 ELSE >func_execprogram_end_loop_not_zero
      POP r9
    :func_execprogram_end_loop_not_zero
  :func_execprogram_end_loop

JUMP >func_execprogram
:func_execprogram_al
POP r15
JUMP r15

:end
PRINT "Finished.\n"
